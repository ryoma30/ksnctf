;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2018 Retargetable Decompiler <info@retdec.com>
;;
;; Decompiler release: v2.2.1 (2016-09-07)
;; Decompilation date: 2018-06-01 02:10:21
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x8048424 -- 0x804842f
0x8048424:   55                                 	push ebp
0x8048425:   89 e5                              	mov ebp, esp
0x8048427:   53                                 	push ebx
0x8048428:   83 ec 04                           	sub esp, 0x4
0x804842b:   e8 00 00 00 00                     	call 0x8048430 <function_8048430>
; function: function_8048430 at 0x8048430 -- 0x8048453
0x8048430:   5b                                 	pop ebx
0x8048431:   81 c3 a0 15 00 00                  	add ebx, 0x15a0
0x8048437:   8b 93 fc ff ff ff                  	mov edx, dword [ ebx + 0xfffffffc ]
0x804843d:   85 d2                              	test edx, edx
0x804843f:   74 05                              	jz 0x8048446 <function_8048430+0x16>
0x8048441:   e8 1e 00 00 00                     	call 0x8048464 <__gmon_start>
0x8048446:   e8 45 01 00 00                     	call 0x8048590 <frame_dummy>
0x804844b:   e8 00 03 00 00                     	call 0x8048750 <__do_global_ctors_aux>
0x8048450:   58                                 	pop eax
0x8048451:   5b                                 	pop ebx
0x8048452:   c9                                 	leave
0x8048453:   c3                                 	ret
; section: .plt
; function: function_8048454 at 0x8048454 -- 0x80484d3
0x8048454:   ff 35 d4 99 04 08                  	push dword [ 0x80499d4 ]
0x804845a:   ff 25 d8 99 04 08                  	jmp dword [ 0x80499d8 ]
0x8048460:   00 00                              	add byte [ eax ], al
0x8048462:   00 00                              	add byte [ eax ], al
0x8048464:   ff 25 dc 99 04 08                  	jmp dword [ 0x80499dc ]
0x804846a:   68 00 00 00 00                     	push 0x0
0x804846f:   e9 e0 ff ff ff                     	jmp 0xffffffe0
0x8048474:   ff 25 e0 99 04 08                  	jmp dword [ 0x80499e0 ]
0x804847a:   68 08 00 00 00                     	push 0x8
0x804847f:   e9 d0 ff ff ff                     	jmp 0xffffffd0
0x8048484:   ff 25 e4 99 04 08                  	jmp dword [ 0x80499e4 ]
0x804848a:   68 10 00 00 00                     	push 0x10
0x804848f:   e9 c0 ff ff ff                     	jmp 0xffffffc0
0x8048494:   ff 25 e8 99 04 08                  	jmp dword [ 0x80499e8 ]
0x804849a:   68 18 00 00 00                     	push 0x18
0x804849f:   e9 b0 ff ff ff                     	jmp 0xffffffb0
0x80484a4:   ff 25 ec 99 04 08                  	jmp dword [ 0x80499ec ]
0x80484aa:   68 20 00 00 00                     	push 0x20
0x80484af:   e9 a0 ff ff ff                     	jmp 0xffffffa0
0x80484b4:   ff 25 f0 99 04 08                  	jmp dword [ 0x80499f0 ]
0x80484ba:   68 28 00 00 00                     	push 0x28
0x80484bf:   e9 90 ff ff ff                     	jmp 0xffffff90
0x80484c4:   ff 25 f4 99 04 08                  	jmp dword [ 0x80499f4 ]
0x80484ca:   68 30 00 00 00                     	push 0x30
0x80484cf:   e9 80 ff ff ff                     	jmp 0xffffff80
; dynamically linked function: __gxx_personality_v0__CXXABI_1.3 at 0x80484d4 -- 0x80484d4
; data inside code section at 0x80484d5 -- 0x80484e4
0x80484d5:   25 f8 99 04 08 68 38 00  00 00 e9 70 ff ff ff      |%....h8....p... |
; dynamically linked function: strcmp at 0x80484e4 -- 0x80484e4
; data inside code section at 0x80484e5 -- 0x80484f4
0x80484e5:   25 fc 99 04 08 68 40 00  00 00 e9 60 ff ff ff      |%....h@....`... |
; section: .text
; function: _start at 0x8048500 -- 0x804852f
0x8048500:   31 ed                              	xor ebp, ebp
0x8048502:   5e                                 	pop esi
0x8048503:   89 e1                              	mov ecx, esp
0x8048505:   83 e4 f0                           	and esp, 0xfffffff0
0x8048508:   50                                 	push eax
0x8048509:   54                                 	push esp
0x804850a:   52                                 	push edx
0x804850b:   68 e0 86 04 08                     	push 0x80486e0
0x8048510:   68 f0 86 04 08                     	push 0x80486f0
0x8048515:   51                                 	push ecx
0x8048516:   56                                 	push esi
0x8048517:   68 b4 85 04 08                     	push 0x80485b4
0x804851c:   e8 73 ff ff ff                     	call 0x8048494 <__libc_start_main>
0x8048521:   f4                                 	hlt
0x8048522:   90                                 	nop
0x8048523:   90                                 	nop
0x8048524:   90                                 	nop
0x8048525:   90                                 	nop
0x8048526:   90                                 	nop
0x8048527:   90                                 	nop
0x8048528:   90                                 	nop
0x8048529:   90                                 	nop
0x804852a:   90                                 	nop
0x804852b:   90                                 	nop
0x804852c:   90                                 	nop
0x804852d:   90                                 	nop
0x804852e:   90                                 	nop
0x804852f:   90                                 	nop
; function: __do_global_dtors_aux at 0x8048530 -- 0x8048585
0x8048530:   55                                 	push ebp
0x8048531:   89 e5                              	mov ebp, esp
0x8048533:   53                                 	push ebx
0x8048534:   8d 64 24 fc                        	lea esp, dword [ esp + 0xfffffffc ]
0x8048538:   80 3d 08 9a 04 08 00               	cmp byte [ 0x8049a08 ], 0x0
0x804853f:   75 3e                              	jnz 0x804857f <__do_global_dtors_aux+0x4f>
0x8048541:   bb e4 98 04 08                     	mov ebx, 0x80498e4
0x8048546:   a1 0c 9a 04 08                     	mov eax, dword [ 0x8049a0c ]
0x804854b:   81 eb e0 98 04 08                  	sub ebx, 0x80498e0
0x8048551:   c1 fb 02                           	sar ebx, 0x2
0x8048554:   83 eb 01                           	sub ebx, 0x1
0x8048557:   39 d8                              	cmp eax, ebx
0x8048559:   73 1d                              	jnc 0x8048578 <__do_global_dtors_aux+0x48>
0x804855b:   90                                 	nop
0x804855c:   8d 74 26 00                        	lea esi, dword [ esi + 0x0 ]
0x8048560:   83 c0 01                           	add eax, 0x1
0x8048563:   a3 0c 9a 04 08                     	mov dword [ 0x8049a0c ], eax
0x8048568:   ff 14 85 e0 98 04 08               	call dword [ eax * 0x2 + 0x80498e0 ]
0x804856f:   a1 0c 9a 04 08                     	mov eax, dword [ 0x8049a0c ]
0x8048574:   39 d8                              	cmp eax, ebx
0x8048576:   72 e8                              	jc 0x8048560 <__do_global_dtors_aux+0x30>
0x8048578:   c6 05 08 9a 04 08 01               	mov byte [ 0x8049a08 ], 0x1
0x804857f:   8d 64 24 04                        	lea esp, dword [ esp + 0x4 ]
0x8048583:   5b                                 	pop ebx
0x8048584:   5d                                 	pop ebp
0x8048585:   c3                                 	ret
; function: function_8048586 at 0x8048586 -- 0x804858f
0x8048586:   8d 76 00                           	lea esi, dword [ esi + 0x0 ]
0x8048589:   8d bc 27 00 00 00 00               	lea edi, dword [ edi + 0x0 ]
; function: frame_dummy at 0x8048590 -- 0x80485b3
0x8048590:   55                                 	push ebp
0x8048591:   89 e5                              	mov ebp, esp
0x8048593:   8d 64 24 e8                        	lea esp, dword [ esp + 0xffffffe8 ]
0x8048597:   a1 e8 98 04 08                     	mov eax, dword [ 0x80498e8 ]
0x804859c:   85 c0                              	test eax, eax
0x804859e:   74 12                              	jz 0x80485b2 <frame_dummy+0x22>
0x80485a0:   b8 00 00 00 00                     	mov eax, 0x0
0x80485a5:   85 c0                              	test eax, eax
0x80485a7:   74 09                              	jz 0x80485b2 <frame_dummy+0x22>
0x80485a9:   c7 04 24 e8 98 04 08               	mov dword [ esp ], 0x80498e8
0x80485b0:   ff d0                              	call eax
0x80485b2:   c9                                 	leave
0x80485b3:   c3                                 	ret
; function: main at 0x80485b4 -- 0x80486df
0x80485b4:   55                                 	push ebp
0x80485b5:   89 e5                              	mov ebp, esp
0x80485b7:   83 e4 f0                           	and esp, 0xfffffff0
0x80485ba:   81 ec 20 04 00 00                  	sub esp, 0x420
0x80485c0:   c7 04 24 a4 87 04 08               	mov dword [ esp ], 0x80487a4 ; "What's your name?"
0x80485c7:   e8 f8 fe ff ff                     	call 0x80484c4 <puts>
0x80485cc:   a1 04 9a 04 08                     	mov eax, dword [ 0x8049a04 ]
0x80485d1:   89 44 24 08                        	mov dword [ esp + 0x8 ], eax
0x80485d5:   c7 44 24 04 00 04 00 00            	mov dword [ esp + 0x4 ], 0x400
0x80485dd:   8d 44 24 18                        	lea eax, dword [ esp + 0x18 ]
0x80485e1:   89 04 24                           	mov dword [ esp ], eax
0x80485e4:   e8 9b fe ff ff                     	call 0x8048484 <fgets>
0x80485e9:   c7 04 24 b6 87 04 08               	mov dword [ esp ], 0x80487b6 ; "Hi, "
0x80485f0:   e8 bf fe ff ff                     	call 0x80484b4 <printf>
0x80485f5:   8d 44 24 18                        	lea eax, dword [ esp + 0x18 ]
0x80485f9:   89 04 24                           	mov dword [ esp ], eax
0x80485fc:   e8 b3 fe ff ff                     	call 0x80484b4 <printf>
0x8048601:   c7 04 24 0a 00 00 00               	mov dword [ esp ], 0xa
0x8048608:   e8 67 fe ff ff                     	call 0x8048474 <putchar>
0x804860d:   c7 84 24 18 04 00 00 01 00 00 00   	mov dword [ esp + 0x418 ], 0x1
0x8048618:   eb 67                              	jmp 0x8048681 <main+0xcd>
0x804861a:   c7 04 24 bb 87 04 08               	mov dword [ esp ], 0x80487bb ; "Do you want the flag?"
0x8048621:   e8 9e fe ff ff                     	call 0x80484c4 <puts>
0x8048626:   a1 04 9a 04 08                     	mov eax, dword [ 0x8049a04 ]
0x804862b:   89 44 24 08                        	mov dword [ esp + 0x8 ], eax
0x804862f:   c7 44 24 04 00 04 00 00            	mov dword [ esp + 0x4 ], 0x400
0x8048637:   8d 44 24 18                        	lea eax, dword [ esp + 0x18 ]
0x804863b:   89 04 24                           	mov dword [ esp ], eax
0x804863e:   e8 41 fe ff ff                     	call 0x8048484 <fgets>
0x8048643:   85 c0                              	test eax, eax
0x8048645:   0f 94 c0                           	setz al
0x8048648:   84 c0                              	test al, al
0x804864a:   74 0a                              	jz 0x8048656 <main+0xa2>
0x804864c:   b8 00 00 00 00                     	mov eax, 0x0
0x8048651:   e9 86 00 00 00                     	jmp 0x80486dc <main+0x128>
0x8048656:   c7 44 24 04 d1 87 04 08            	mov dword [ esp + 0x4 ], 0x80487d1 ; "no\n"
0x804865e:   8d 44 24 18                        	lea eax, dword [ esp + 0x18 ]
0x8048662:   89 04 24                           	mov dword [ esp ], eax
0x8048665:   e8 7a fe ff ff                     	call 0x80484e4 <strcmp>
0x804866a:   85 c0                              	test eax, eax
0x804866c:   75 13                              	jnz 0x8048681 <main+0xcd>
0x804866e:   c7 04 24 d5 87 04 08               	mov dword [ esp ], 0x80487d5 ; "I see. Good bye."
0x8048675:   e8 4a fe ff ff                     	call 0x80484c4 <puts>
0x804867a:   b8 00 00 00 00                     	mov eax, 0x0
0x804867f:   eb 5b                              	jmp 0x80486dc <main+0x128>
0x8048681:   8b 84 24 18 04 00 00               	mov eax, dword [ esp + 0x418 ]
0x8048688:   85 c0                              	test eax, eax
0x804868a:   0f 95 c0                           	setnz al
0x804868d:   84 c0                              	test al, al
0x804868f:   75 89                              	jnz 0x804861a <main+0x66>
0x8048691:   c7 44 24 04 e6 87 04 08            	mov dword [ esp + 0x4 ], 0x80487e6
0x8048699:   c7 04 24 e8 87 04 08               	mov dword [ esp ], 0x80487e8 ; "flag.txt"
0x80486a0:   e8 ff fd ff ff                     	call 0x80484a4 <fopen>
0x80486a5:   89 84 24 1c 04 00 00               	mov dword [ esp + 0x41c ], eax
0x80486ac:   8b 84 24 1c 04 00 00               	mov eax, dword [ esp + 0x41c ]
0x80486b3:   89 44 24 08                        	mov dword [ esp + 0x8 ], eax
0x80486b7:   c7 44 24 04 00 04 00 00            	mov dword [ esp + 0x4 ], 0x400
0x80486bf:   8d 44 24 18                        	lea eax, dword [ esp + 0x18 ]
0x80486c3:   89 04 24                           	mov dword [ esp ], eax
0x80486c6:   e8 b9 fd ff ff                     	call 0x8048484 <fgets>
0x80486cb:   8d 44 24 18                        	lea eax, dword [ esp + 0x18 ]
0x80486cf:   89 04 24                           	mov dword [ esp ], eax
0x80486d2:   e8 dd fd ff ff                     	call 0x80484b4 <printf>
0x80486d7:   b8 00 00 00 00                     	mov eax, 0x0
0x80486dc:   c9                                 	leave
0x80486dd:   c3                                 	ret
0x80486de:   90                                 	nop
0x80486df:   90                                 	nop
; function: __libc_csu_fini at 0x80486e0 -- 0x80486ef
0x80486e0:   55                                 	push ebp
0x80486e1:   89 e5                              	mov ebp, esp
0x80486e3:   5d                                 	pop ebp
0x80486e4:   c3                                 	ret
0x80486e5:   66                                 	
0x80486e6:   66                                 	
0x80486e7:   2e                                 	
0x80486e8:   0f 1f 84 00 00 00 00 00            	nop dword [ eax + eax * 0x0 + 0x0 ]
; function: __libc_csu_init at 0x80486f0 -- 0x8048749
0x80486f0:   55                                 	push ebp
0x80486f1:   89 e5                              	mov ebp, esp
0x80486f3:   57                                 	push edi
0x80486f4:   56                                 	push esi
0x80486f5:   53                                 	push ebx
0x80486f6:   e8 4f 00 00 00                     	call 0x804874a <__i686.get_pc_thunk.bx>
0x80486fb:   81 c3 d5 12 00 00                  	add ebx, 0x12d5
0x8048701:   83 ec 1c                           	sub esp, 0x1c
0x8048704:   e8 1b fd ff ff                     	call 0x8048424 <_init>
0x8048709:   8d bb 08 ff ff ff                  	lea edi, dword [ ebx + 0xffffff08 ]
0x804870f:   8d 83 08 ff ff ff                  	lea eax, dword [ ebx + 0xffffff08 ]
0x8048715:   29 c7                              	sub edi, eax
0x8048717:   c1 ff 02                           	sar edi, 0x2
0x804871a:   85 ff                              	test edi, edi
0x804871c:   74 24                              	jz 0x8048742 <__libc_csu_init+0x52>
0x804871e:   31 f6                              	xor esi, esi
0x8048720:   8b 45 10                           	mov eax, dword [ ebp + 0x10 ]
0x8048723:   89 44 24 08                        	mov dword [ esp + 0x8 ], eax
0x8048727:   8b 45 0c                           	mov eax, dword [ ebp + 0xc ]
0x804872a:   89 44 24 04                        	mov dword [ esp + 0x4 ], eax
0x804872e:   8b 45 08                           	mov eax, dword [ ebp + 0x8 ]
0x8048731:   89 04 24                           	mov dword [ esp ], eax
0x8048734:   ff 94 b3 08 ff ff ff               	call dword [ ebx + esi * 0x2 + 0xffffff08 ]
0x804873b:   83 c6 01                           	add esi, 0x1
0x804873e:   39 fe                              	cmp esi, edi
0x8048740:   72 de                              	jc 0x8048720 <__libc_csu_init+0x30>
0x8048742:   83 c4 1c                           	add esp, 0x1c
0x8048745:   5b                                 	pop ebx
0x8048746:   5e                                 	pop esi
0x8048747:   5f                                 	pop edi
0x8048748:   5d                                 	pop ebp
0x8048749:   c3                                 	ret
; function: __i686.get_pc_thunk.bx at 0x804874a -- 0x804874f
0x804874a:   8b 1c 24                           	mov ebx, dword [ esp ]
0x804874d:   c3                                 	ret
0x804874e:   90                                 	nop
0x804874f:   90                                 	nop
; function: __do_global_ctors_aux at 0x8048750 -- 0x804877b
0x8048750:   55                                 	push ebp
0x8048751:   89 e5                              	mov ebp, esp
0x8048753:   53                                 	push ebx
0x8048754:   8d 64 24 fc                        	lea esp, dword [ esp + 0xfffffffc ]
0x8048758:   a1 d8 98 04 08                     	mov eax, dword [ 0x80498d8 ]
0x804875d:   83 f8 ff                           	cmp eax, 0xffffffff
0x8048760:   74 12                              	jz 0x8048774 <__do_global_ctors_aux+0x24>
0x8048762:   bb d8 98 04 08                     	mov ebx, 0x80498d8
0x8048767:   90                                 	nop
0x8048768:   8d 5b fc                           	lea ebx, dword [ ebx + 0xfffffffc ]
0x804876b:   ff d0                              	call eax
0x804876d:   8b 03                              	mov eax, dword [ ebx ]
0x804876f:   83 f8 ff                           	cmp eax, 0xffffffff
0x8048772:   75 f4                              	jnz 0x8048768 <__do_global_ctors_aux+0x18>
0x8048774:   8d 64 24 04                        	lea esp, dword [ esp + 0x4 ]
0x8048778:   5b                                 	pop ebx
0x8048779:   5d                                 	pop ebp
0x804877a:   c3                                 	ret
0x804877b:   90                                 	nop
; section: .fini
; function: _fini at 0x804877c -- 0x8048787
0x804877c:   55                                 	push ebp
0x804877d:   89 e5                              	mov ebp, esp
0x804877f:   53                                 	push ebx
0x8048780:   83 ec 04                           	sub esp, 0x4
0x8048783:   e8 00 00 00 00                     	call 0x8048788 <function_8048788>
; function: function_8048788 at 0x8048788 -- 0x8048797
0x8048788:   5b                                 	pop ebx
0x8048789:   81 c3 48 12 00 00                  	add ebx, 0x1248
0x804878f:   e8 9c fd ff ff                     	call 0x8048530 <__do_global_dtors_aux>
0x8048794:   59                                 	pop ecx
0x8048795:   5b                                 	pop ebx
0x8048796:   c9                                 	leave
0x8048797:   c3                                 	ret

;;
;; Data Segment
;;

; section: .interp
0x8048134:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048144:   2e 32 00                                           |.2.             |
; section: .gnu.hash
0x804818c:   03 00 00 00 0a 00 00 00  01 00 00 00 05 00 00 00   |................|
0x804819c:   80 28 00 21 00 00 00 00  0a 00 00 00 0c 00 00 00   |.(.!............|
0x80481ac:   ac 4b e3 c0 67 55 61 10  79 49 6b b6               |.K..gUa.yIk.    |
; section: .dynsym
0x80481b8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481c8:   10 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x80481d8:   1f 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x80481e8:   84 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481f8:   99 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048208:   a6 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048218:   79 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |y...............|
0x8048228:   92 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048238:   7f 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048248:   9f 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048258:   6a 00 00 00 9c 87 04 08  04 00 00 00 11 00 0f 00   |j...............|
0x8048268:   8c 00 00 00 04 9a 04 08  04 00 00 00 11 00 19 00   |................|
0x8048278:   33 00 00 00 d4 84 04 08  00 00 00 00 12 00 00 00   |3...............|
; section: .dynstr
0x8048288:   00 6c 69 62 73 74 64 63  2b 2b 2e 73 6f 2e 36 00   |.libstdc++.so.6.|
0x8048298:   5f 5f 67 6d 6f 6e 5f 73  74 61 72 74 5f 5f 00 5f   |__gmon_start__._|
0x80482a8:   4a 76 5f 52 65 67 69 73  74 65 72 43 6c 61 73 73   |Jv_RegisterClass|
0x80482b8:   65 73 00 5f 5f 67 78 78  5f 70 65 72 73 6f 6e 61   |es.__gxx_persona|
0x80482c8:   6c 69 74 79 5f 76 30 00  6c 69 62 6d 2e 73 6f 2e   |lity_v0.libm.so.|
0x80482d8:   36 00 6c 69 62 67 63 63  5f 73 2e 73 6f 2e 31 00   |6.libgcc_s.so.1.|
0x80482e8:   6c 69 62 63 2e 73 6f 2e  36 00 5f 49 4f 5f 73 74   |libc.so.6._IO_st|
0x80482f8:   64 69 6e 5f 75 73 65 64  00 66 6f 70 65 6e 00 70   |din_used.fopen.p|
0x8048308:   75 74 73 00 70 75 74 63  68 61 72 00 73 74 64 69   |uts.putchar.stdi|
0x8048318:   6e 00 70 72 69 6e 74 66  00 66 67 65 74 73 00 73   |n.printf.fgets.s|
0x8048328:   74 72 63 6d 70 00 5f 5f  6c 69 62 63 5f 73 74 61   |trcmp.__libc_sta|
0x8048338:   72 74 5f 6d 61 69 6e 00  43 58 58 41 42 49 5f 31   |rt_main.CXXABI_1|
0x8048348:   2e 33 00 47 4c 49 42 43  5f 32 2e 31 00 47 4c 49   |.3.GLIBC_2.1.GLI|
0x8048358:   42 43 5f 32 2e 30 00                               |BC_2.0.         |
; section: .gnu.version
0x8048360:   00 00 00 00 00 00 02 00  02 00 02 00 03 00 02 00   |................|
0x8048370:   02 00 02 00 01 00 02 00  04 00                     |..........      |
; section: .gnu.version_r
0x804837c:   01 00 01 00 01 00 00 00  10 00 00 00 20 00 00 00   |............ ...|
0x804838c:   d3 af 6b 05 00 00 04 00  b8 00 00 00 00 00 00 00   |..k.............|
0x804839c:   01 00 02 00 60 00 00 00  10 00 00 00 00 00 00 00   |....`...........|
0x80483ac:   11 69 69 0d 00 00 03 00  c3 00 00 00 10 00 00 00   |.ii.............|
0x80483bc:   10 69 69 0d 00 00 02 00  cd 00 00 00 00 00 00 00   |.ii.............|
; section: .rel.dyn
0x80483cc:   cc 99 04 08 06 01 00 00  04 9a 04 08 05 0b 00 00   |................|
; section: .rel.plt
0x80483dc:   dc 99 04 08 07 01 00 00  e0 99 04 08 07 03 00 00   |................|
0x80483ec:   e4 99 04 08 07 04 00 00  e8 99 04 08 07 05 00 00   |................|
0x80483fc:   ec 99 04 08 07 06 00 00  f0 99 04 08 07 07 00 00   |................|
0x804840c:   f4 99 04 08 07 08 00 00  f8 99 04 08 07 0c 00 00   |................|
0x804841c:   fc 99 04 08 07 09 00 00                            |........        |
; section: .rodata
0x8048798:   03 00 00 00 01 00 02 00  00 00 00 00               |............    |
0x80487a4:   57 68 61 74 27 73 20 79  6f 75 72 20 6e 61 6d 65   |What's your name|   "What's your name?"
0x80487b4:   3f 00                                              |?.              |
0x80487b6:   48 69 2c 20 00                                     |Hi, .           |   "Hi, "
0x80487bb:   44 6f 20 79 6f 75 20 77  61 6e 74 20 74 68 65 20   |Do you want the |   "Do you want the flag?"
0x80487cb:   66 6c 61 67 3f 00                                  |flag?.          |
0x80487d1:   6e 6f 0a 00                                        |no..            |   "no\n"
0x80487d5:   49 20 73 65 65 2e 20 47  6f 6f 64 20 62 79 65 2e   |I see. Good bye.|   "I see. Good bye."
0x80487e5:   00                                                 |.               |
0x80487e6:   72 00                                              |r.              |
0x80487e8:   66 6c 61 67 2e 74 78 74  00                        |flag.txt.       |   "flag.txt"
; section: .eh_frame_hdr
0x80487f4:   01 1b 03 3b 28 00 00 00  04 00 00 00 c0 fd ff ff   |...;(...........|
0x8048804:   48 00 00 00 ec fe ff ff  80 00 00 00 fc fe ff ff   |H...............|
0x8048814:   a0 00 00 00 56 ff ff ff  cc 00 00 00               |....V.......    |
; section: .eh_frame
0x8048820:   18 00 00 00 00 00 00 00  01 7a 50 52 00 01 7c 08   |.........zPR..|.|
0x8048830:   06 00 d4 84 04 08 1b 0c  04 04 88 01 1c 00 00 00   |................|
0x8048840:   20 00 00 00 70 fd ff ff  2a 01 00 00 00 41 0e 08   | ...p...*....A..|
0x8048850:   85 02 42 0d 05 03 26 01  c5 0c 04 04 14 00 00 00   |..B...&.........|
0x8048860:   00 00 00 00 01 7a 52 00  01 7c 08 01 1b 0c 04 04   |.....zR..|......|
0x8048870:   88 01 00 00 1c 00 00 00  1c 00 00 00 64 fe ff ff   |............d...|
0x8048880:   05 00 00 00 00 41 0e 08  85 02 42 0d 05 41 c5 0c   |.....A....B..A..|
0x8048890:   04 04 00 00 28 00 00 00  3c 00 00 00 54 fe ff ff   |....(...<...T...|
0x80488a0:   5a 00 00 00 00 41 0e 08  85 02 42 0d 05 43 83 05   |Z....A....B..C..|
0x80488b0:   86 04 87 03 02 50 c3 41  c6 41 c7 41 c5 0c 04 04   |.....P.A.A.A....|
0x80488c0:   10 00 00 00 68 00 00 00  82 fe ff ff 04 00 00 00   |....h...........|
0x80488d0:   00 00 00 00 00 00 00 00                            |........        |
; section: .ctors
0x80498d8:   ff ff ff ff 00 00 00 00                            |........        |
; section: .dtors
0x80498e0:   ff ff ff ff 00 00 00 00                            |........        |
; section: .jcr
0x80498e8:   00 00 00 00                                        |....            |
; section: .dynamic
0x80498ec:   01 00 00 00 01 00 00 00  01 00 00 00 48 00 00 00   |............H...|
0x80498fc:   01 00 00 00 52 00 00 00  01 00 00 00 60 00 00 00   |....R.......`...|
0x804990c:   0c 00 00 00 24 84 04 08  0d 00 00 00 7c 87 04 08   |....$.......|...|
0x804991c:   f5 fe ff 6f 8c 81 04 08  05 00 00 00 88 82 04 08   |...o............|
0x804992c:   06 00 00 00 b8 81 04 08  0a 00 00 00 d7 00 00 00   |................|
0x804993c:   0b 00 00 00 10 00 00 00  15 00 00 00 00 00 00 00   |................|
0x804994c:   03 00 00 00 d0 99 04 08  02 00 00 00 48 00 00 00   |............H...|
0x804995c:   14 00 00 00 11 00 00 00  17 00 00 00 dc 83 04 08   |................|
0x804996c:   11 00 00 00 cc 83 04 08  12 00 00 00 10 00 00 00   |................|
0x804997c:   13 00 00 00 08 00 00 00  fe ff ff 6f 7c 83 04 08   |...........o|...|
0x804998c:   ff ff ff 6f 02 00 00 00  f0 ff ff 6f 60 83 04 08   |...o.......o`...|
0x804999c:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80499ac:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80499bc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
; section: .got
0x80499cc:   00 00 00 00                                        |....            |
; section: .got.plt
0x80499d0:   ec 98 04 08 00 00 00 00  00 00 00 00 6a 84 04 08   |............j...|
0x80499e0:   7a 84 04 08 8a 84 04 08  9a 84 04 08 aa 84 04 08   |z...............|
0x80499f0:   ba 84 04 08 ca 84 04 08  da 84 04 08 ea 84 04 08   |................|
; section: .data
0x8049a00:   00 00 00 00                                        |....            |
